package main

import (
	"code.jogchat.internal/golang_backend/handler"
	"code.jogchat.internal/golang_backend/schemaless"
	"github.com/gin-gonic/gin"
	"code.jogchat.internal/golang_backend/middleware"
    "github.com/swaggo/gin-swagger" // gin-swagger middleware
    "github.com/swaggo/gin-swagger/swaggerFiles" // swagger embed files

    _ "./docs" // docs is generated by Swag CLI, you have to import it.
)


// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host 178.128.0.108:3001
// @BasePath /

func main() {
	// Initialise our app-wide environment data we'll send to the handler
	env := &handler.Env{
		Port: ":3001",
		Secret: "biscuits and gravy",
		Domain: "jogchat.com",
		Email: "admin@jogchat.com",
		PrivateKey: "key-f44fa8c4e93f293b34bffd8df6269870",
		PublicKey: "pubkey-1fd2593b1993e76a28fd0ba2420b9333",
	}

	schemaless.InitDB()
	defer schemaless.CloseDB()

	r := gin.Default()
	r.Use(middleware.CORSMiddleware())

	r.POST("/referrer_check_signup_email", handler.ReferrerCheckSignupEmail(env))
	r.POST("/applicant_check_signup_email", handler.ApplicantCheckSignupEmail(env))
	r.POST("/activate_and_signup", handler.ActivateAndSignup(env))
	r.POST("/login", handler.Signin(env))
	r.POST("/reset_request", handler.ResetRequest(env))
	r.POST("/reset_password", handler.ResetPassword(env))

	r.POST("/upload_resume", handler.UploadResume(env))
	r.GET("/get_resume", handler.GetResume(env))
  
    // use ginSwagger middleware to 
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.POST("/add_company", handler.AddCompany(env))
	r.POST("/add_school", handler.AddSchool(env))

	r.Run(env.Port)
}
